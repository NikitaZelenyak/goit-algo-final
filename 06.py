def greedy_algorithm(items, budget):
    """–ñ–∞–¥—ñ–±–Ω–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º: –≤–∏–±–∏—Ä–∞—î–º–æ —Å—Ç—Ä–∞–≤–∏ –∑–∞ –Ω–∞–π–±—ñ–ª—å—à–∏–º —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è–º –∫–∞–ª–æ—Ä—ñ–π/–≤–∞—Ä—Ç—ñ—Å—Ç—å"""
    sorted_items = sorted(items.items(), key=lambda x: x[1]["calories"] / x[1]["cost"], reverse=True)

    total_calories = 0
    selected_items = []
    remaining_budget = budget

    for item, data in sorted_items:
        if data["cost"] <= remaining_budget:
            selected_items.append(item)
            total_calories += data["calories"]
            remaining_budget -= data["cost"]

    return selected_items, total_calories


def dynamic_programming(items, budget):
    """–î–∏–Ω–∞–º—ñ—á–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è: –º–∞–∫—Å–∏–º—ñ–∑–∞—Ü—ñ—è –∫–∞–ª–æ—Ä—ñ–π —É –º–µ–∂–∞—Ö –±—é–¥–∂–µ—Ç—É (–ø–æ–¥—ñ–±–Ω–µ –¥–æ –∑–∞–¥–∞—á—ñ –ø—Ä–æ —Ä—é–∫–∑–∞–∫)"""
    item_names = list(items.keys())
    costs = [items[name]["cost"] for name in item_names]
    calories = [items[name]["calories"] for name in item_names]
    n = len(items)

    # DP-—Ç–∞–±–ª–∏—Ü—è (—Ä—è–¥–∫–∏ ‚Äî –ø—Ä–µ–¥–º–µ—Ç–∏, —Å—Ç–æ–≤–ø—Ü—ñ ‚Äî –±—é–¥–∂–µ—Ç)
    dp = [[0] * (budget + 1) for _ in range(n + 1)]

    # –ó–∞–ø–æ–≤–Ω—é—î–º–æ DP-—Ç–∞–±–ª–∏—Ü—é
    for i in range(1, n + 1):
        for b in range(budget + 1):
            if costs[i - 1] <= b:
                dp[i][b] = max(dp[i - 1][b], dp[i - 1][b - costs[i - 1]] + calories[i - 1])
            else:
                dp[i][b] = dp[i - 1][b]

    # –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
    selected_items = []
    b = budget
    for i in range(n, 0, -1):
        if dp[i][b] != dp[i - 1][b]:  # –Ø–∫—â–æ –≤–∑—è–ª–∏ —Ü–µ–π –ø—Ä–µ–¥–º–µ—Ç
            selected_items.append(item_names[i - 1])
            b -= costs[i - 1]

    selected_items.reverse()  # –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫

    return selected_items, dp[n][budget]


# üîπ –î–∞–Ω—ñ –ø—Ä–æ —ó–∂—É
items = {
    "pizza": {"cost": 50, "calories": 300},
    "hamburger": {"cost": 40, "calories": 250},
    "hot-dog": {"cost": 30, "calories": 200},
    "pepsi": {"cost": 10, "calories": 100},
    "cola": {"cost": 15, "calories": 220},
    "potato": {"cost": 25, "calories": 350}
}

# üîπ –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–ø—É—Å–∫—É
budget = 60

greedy_result = greedy_algorithm(items, budget)
dp_result = dynamic_programming(items, budget)

print(f"üîπ –ñ–∞–¥—ñ–±–Ω–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º: {greedy_result[0]}, –∫–∞–ª–æ—Ä—ñ—ó: {greedy_result[1]}")
print(f"üîπ –î–∏–Ω–∞–º—ñ—á–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è: {dp_result[0]}, –∫–∞–ª–æ—Ä—ñ—ó: {dp_result[1]}")
