import random
import matplotlib.pyplot as plt

def monte_carlo_dice_simulation(n_rolls=100000):
    """–ú–µ—Ç–æ–¥ –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ: –∫–∏–¥–∞—î–º–æ –¥–≤–∞ –∫—É–±–∏–∫–∏ –±–∞–≥–∞—Ç–æ —Ä–∞–∑—ñ–≤ —Ç–∞ —Ä–∞—Ö—É—î–º–æ —á–∞—Å—Ç–æ—Ç—É —Å—É–º"""
    
    sums_count = {i: 0 for i in range(2, 13)}

    for _ in range(n_rolls):
        die1 = random.randint(1, 6)
        die2 = random.randint(1, 6)
        total = die1 + die2
        sums_count[total] += 1

    probabilities = {s: count / n_rolls for s, count in sums_count.items()}
    
    return probabilities

# üîπ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∏–º—É–ª—è—Ü—ñ—é
n_rolls = 100000  # –ß–∏–º –±—ñ–ª—å—à–µ –∫–∏–¥–∫—ñ–≤, —Ç–∏–º —Ç–æ—á–Ω—ñ—à—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
simulated_probabilities = monte_carlo_dice_simulation(n_rolls)

# üîπ –¢–µ–æ—Ä–µ—Ç–∏—á–Ω—ñ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ
theoretical_probabilities = {
    2: 1/36,  3: 2/36,  4: 3/36,  5: 4/36,  6: 5/36, 
    7: 6/36,  8: 5/36,  9: 4/36, 10: 3/36, 11: 2/36, 12: 1/36
}

# üîπ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
sums = list(range(2, 13))
simulated_values = [simulated_probabilities[s] for s in sums]
theoretical_values = [theoretical_probabilities[s] for s in sums]

plt.figure(figsize=(10, 6))
plt.bar(sums, simulated_values, width=0.4, label="–ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ", color='royalblue', alpha=0.7)
plt.bar([s + 0.4 for s in sums], theoretical_values, width=0.4, label="–¢–µ–æ—Ä–µ—Ç–∏—á–Ω–∞", color='orange', alpha=0.7)

plt.xlabel("–°—É–º–∞ –Ω–∞ –∫—É–±–∏–∫–∞—Ö")
plt.ylabel("–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å")
plt.title(f"–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å–∏–º—É–ª—è—Ü—ñ—ó –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ —Ç–∞ —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–∏—Ö –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç–µ–π ({n_rolls} –∫–∏–¥–∫—ñ–≤)")
plt.xticks(sums)
plt.legend()
plt.show()
